# -*- coding: utf-8 -*-
"""SA Heart.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I2EVr9ZqNpOK3p_feWzMSLgvOrDQM840
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import matplotlib.patches as mpatches
import numpy as np
# %matplotlib inline
import matplotlib.pyplot as plt
import plotly.express as px 
import plotly.graph_objects as go
import seaborn as sns
import cufflinks as cf
import plotly as py
py.offline.init_notebook_mode(connected = True)
cf.go_offline()
sns.set()

"""## Importing the data

#### It is very crucial to note that attribute names are changed in 'df' for better understanding. This will not change our results so dont worry.
<table style="display: inline-block">
<tr><th>Original attribute names</th><th>Descriptive attribute names</th></tr>
<tr><td>row.names</td><td>row.names</td></tr>
<tr><td>sbp</td><td>systolic blood pressure</td></tr>
<tr><td>tobacco</td><td>tobacco (kg)</td></tr>
<tr><td>ldl</td><td>cholesterol</td></tr>
<tr><td>adiposity</td><td>adiposity</td></tr>
<tr><td>famhist</td><td>family history of heart disease</td></tr>
<tr><td>typea</td><td>type-A behavior</td></tr>
<tr><td>obesity</td><td>obesity</td></tr>
<tr><td>alcohol</td><td>current alcohol consumption</td></tr>
<tr><td>age</td><td>age at onset</td></tr>
<tr><td>chd</td><td>response, coronary heart disease</td></tr>
"""

df = pd.read_csv('https://raw.githubusercontent.com/KrishnaMohinani/SAheart/main/SAheart.csv')
df = df.drop(columns=['row.names'])
df

"""## Feature transformation"""

dic = {'Present':1, 'Absent':0}
df['family history of heart disease'] = df['family history of heart disease'].replace(dic)
df

"""## A quick description of the data"""

df.describe()

df.isnull().sum()   # This implies no missing values

"""## Making box plot"""

data_fmh = df.drop('family history of heart disease', axis=1)
dic1 = {1:'Positive', 0:'Negative'}
data_fmh['response, coronary heart disease'] = data_fmh['response, coronary heart disease'].replace(dic1)
data_fmh

vis = (data_fmh.iloc[:, :-1] - data_fmh.iloc[:, :-1].mean(axis=0))/data_fmh.iloc[:, :-1].std(axis=0)
vis['CHD'] = data_fmh['response, coronary heart disease']
vis

fig = px.box(vis,color='CHD', color_discrete_sequence=["red", "blue"]) #, points='all')
fig.update_layout(font=dict(size=14))
fig.update_yaxes(title='', visible=True, showticklabels=True)
fig.update_xaxes(title='', visible=True, showticklabels=True)
fig.show()

"""## Making histogram"""

data=df.iloc[:,:-1]      #The CHD va r iable is removed from 'data' dataframe and used for PCA
data

fig = plt.figure(figsize=(25, 20))

ax1 = plt.subplot(3, 3, 1)
ax1.hist(data['adiposity'],color='royalblue')
ax1.set_title('Adiposity (index)',fontsize=30, fontweight='bold')
ax1.set_ylabel('Frequency', fontsize=25)
ax1.tick_params(labelsize=25)

ax2 = plt.subplot(3, 3, 2)
ax2.hist(data['age at onset'],color='royalblue',bins=12)
ax2.set_title('Age (years)',fontsize=30, fontweight='bold')
ax2.set_ylabel('Frequency', fontsize=25)
ax2.tick_params(labelsize=25)

ax3 = plt.subplot(3, 3, 3)
ax3.hist(data['cholesterol'],color='royalblue')
ax3.set_title('Ldl chlorestrol (mg/dL)',fontsize=30, fontweight='bold')
ax3.set_ylabel('Frequency', fontsize=25)
ax3.tick_params(labelsize=25)

ax4 = plt.subplot(3, 3, 4)
ax4.hist(data['current alcohol consumption'],color='royalblue')
ax4.set_title('Alcohol (Litres/year)',fontsize=30, fontweight='bold')
ax4.set_ylabel('Frequency', fontsize=25)
ax4.tick_params(labelsize=25)

ax5 = plt.subplot(3, 3, 5)
chd_no = df['response, coronary heart disease'].value_counts()[0]
chd_yes = df['response, coronary heart disease'].value_counts()[1]
np.arange(2)
ax5.bar([0,1], [chd_no, chd_yes],color='royalblue')
ax5.set_title('Famhist (Binary)',fontsize=30, fontweight='bold')
ax5.set_ylabel('Frequency', fontsize=25)
ax5.tick_params(labelsize=25)

ax6 = plt.subplot(3, 3, 6)
ax6.hist(data['obesity'],color='royalblue',bins=13)
ax6.set_title('Obesity (index)',fontsize=30, fontweight='bold')
ax6.set_ylabel('Frequency', fontsize=25)
ax6.tick_params(labelsize=25)

ax7 = plt.subplot(3, 3, 7)
ax7.hist(data['systolic blood pressure'],color='royalblue')
ax7.set_title('SBP (mmHg)',fontsize=30, fontweight='bold')
ax7.set_ylabel('Frequency', fontsize=25)
ax7.tick_params(labelsize=25)

ax8 = plt.subplot(3, 3, 8)
ax8.hist(data['tobacco (kg)'],color='royalblue')
ax8.set_title('Tobacco (kg)',fontsize=30, fontweight='bold')
ax8.set_ylabel('Frequency', fontsize=25)
ax8.tick_params(labelsize=25)

ax9 = plt.subplot(3, 3, 9)
ax9.hist(data['type-A behavior'],color='royalblue')
ax9.set_title('Type-A behavior',fontsize=30, fontweight='bold')
ax9.set_ylabel('Frequency', fontsize=25)
ax9.tick_params(labelsize=25)

"""## Checking the correlation"""

correlation_df = pd.read_csv('https://web.stanford.edu/~hastie/ElemStatLearn/datasets/SAheart.data')
correlation_df = correlation_df.drop(columns=['row.names'])
correlation_df['CHD'] = data_fmh['response, coronary heart disease']

dic2 = {'Present':1, 'Absent':0}
correlation_df['famhist'] = correlation_df['famhist'].replace(dic)
corr = correlation_df.corr()

figure, ax = plt.subplots(figsize=(10, 8))
plt.xticks(fontsize=17,weight='bold')
plt.yticks(fontsize=17 ,weight='bold')
sns.set(font_scale = 1.2)
g = sns.heatmap(corr, annot=True,mask=np.zeros_like(corr, dtype=np.bool),cmap="YlGnBu_r" ,
            square=True,ax=ax);
g.set_xticklabels(labels=('sbp','tobacco','ldl','adiposty','famhist',
                         'typea','obesity','alcohol','age','chd'),rotation=-90);
#cmap=sns.diverging_palette(220, 10, as_cmap=True,center='light')

correlation_df

"""## PCA

## Subtracting mean value fom the data
"""

Y = data - data.mean(axis=0)
Y

U,S,VT = np.linalg.svd(Y,full_matrices=False)
rho = (S*S) / (S*S).sum() 
threshold = 0.9

fig1 = plt.figure(figsize=(24,5))
ax = fig1.add_subplot(122)
ax.plot(range(1,len(rho)+1),rho,'x-')
ax.plot([1,len(rho)],[threshold, threshold],'k--')
ax.plot(range(1,len(rho)+1),np.cumsum(rho),'o-',c='red')
ax.legend(['Individual','Threshold','Cumulative'],fontsize=17)
plt.xlabel("Principal Component",fontsize=20)
plt.xticks(fontsize=20)
plt.yticks(fontsize=20)
plt.ylabel("Variance Explained",fontsize=20)
plt.show()

np.cumsum(rho)

"""#### Plotting principal components"""

V = VT.T 
Z = Y @ V

color_dict = dict({'Positive':'red',
                  'Negative':'blue',
                  })

fig, ax = plt.subplots(figsize=(10, 6))
sns.scatterplot(x = Z[0], y = Z[1],hue=correlation_df['CHD'],s=50 ,palette=color_dict)
plt.xlabel("PCA1",fontsize=20)
plt.xticks(fontsize=20)
plt.yticks(fontsize=20)
plt.ylabel("PCA2",fontsize=20)
plt.legend(fontsize=17)
plt.show()

"""#### Plotting coefficients"""

test_df = pd.DataFrame(VT, index = ['PC1','PC2','PC3','PC4','PC5','PC6','PC7','PC8','PC9'],
                    columns=['sbp','tobacco','ldl',
                             'adiposty','famhist','typea',
                              'obesity','alcohol','age'])

test_df = test_df.transpose()
coefficents = test_df[['PC1','PC2','PC3','PC4']]

ax = coefficents.plot(kind='bar', figsize=(18, 10), legend=True, fontsize=25)
ax.set_ylabel("Principal Component Coefficients", fontsize=25)
plt.xticks(rotation=-30)
plt.legend(fontsize = 18)
plt.show()

"""## Subtracting mean value fom the data and dividing it by SD """

SD = (data - data.mean(axis=0))/data.std(axis=0)
SD

U,S,VT = np.linalg.svd(SD,full_matrices=False)
rho = (S*S) / (S*S).sum() 
threshold = 0.9

fig1 = plt.figure(figsize=(24,5))
ax = fig1.add_subplot(122)
ax.plot(range(1,len(rho)+1),rho,'x-')
ax.plot([1,len(rho)],[threshold, threshold],'k--')
ax.plot(range(1,len(rho)+1),np.cumsum(rho),'o-',c='red')
ax.legend(['Individual','Threshold','Cumulative'],fontsize=17)
plt.xlabel("Principal Component",fontsize=20)
plt.xticks(fontsize=20)
plt.yticks(fontsize=20)
plt.ylabel("Variance Explained",fontsize=20)
plt.show()

np.cumsum(rho)

"""#### Plotting principal components"""

V = VT.T 
Z = SD @ V

color_dict = dict({'Positive':'red',
                  'Negative':'blue',
                  })

fig, ax = plt.subplots(figsize=(10, 6))
sns.scatterplot(x = Z[0], y = Z[1],hue=correlation_df['CHD'],s=50 ,palette=color_dict)
plt.xlabel("PCA1",fontsize=20)
plt.xticks(fontsize=20)
plt.yticks(fontsize=20)
plt.ylabel("PCA2",fontsize=20)
plt.legend(fontsize=17)
plt.show()

"""#### Plotting coefficients"""

test_df = pd.DataFrame(VT, index = ['PC1','PC2','PC3','PC4','PC5','PC6','PC7','PC8','PC9'],
                    columns=['sbp','tobacco','ldl',
                             'adiposty','famhist','typea',
                              'obesity','alcohol','age'])
test_df

test_df = test_df.transpose()
coefficents = test_df[['PC1','PC2','PC3','PC4','PC5','PC6','PC7']]
coefficents

ax = coefficents.plot(kind='bar', figsize=(18, 10), legend=True, fontsize=25)
ax.set_ylabel("Principal Component Coefficients", fontsize=25)
plt.xticks(rotation=-30)
plt.legend(fontsize = 18)
plt.show()